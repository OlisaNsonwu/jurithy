% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bys_funcs.R
\name{bys_funcs}
\alias{bys_funcs}
\alias{bys_rank}
\alias{bys_tot}
\alias{bys_val}
\alias{bys_func}
\alias{bys_lead_val}
\alias{bys_nval}
\title{\code{bysort} in \code{R}}
\usage{
bys_rank(..., by, from_last = F)

bys_tot(by)

bys_val(..., by, val, from_last = F)

bys_func(..., by, val, func, from_last = F)

bys_lead_val(..., by, val, from_last = F, n = 1)

bys_nval(..., by, val, from_last = F, n = 1)
}
\arguments{
\item{...}{Sort levels. Passed to \code{order()}}

\item{by}{Groups}

\item{from_last}{Sort order. Passed to \code{order()}}

\item{val}{Value}

\item{func}{Function}
}
\value{
Atomic vector
}
\description{
R-styled versions of \code{STATA}'s \code{bysort} command.
}
\details{
\bold{\code{bys_rank}} - Sort order of each record in a group
\itemize{
\item \bold{\code{STATA}} - \bold{\code{bysort group_var (sort_vars) : gen x = _n }}
\item \bold{\code{R}} - \bold{\code{bys_rank(sort_vars, by = group_var)}}
Use \code{from_last} to rank from in ascending (\code{FALSE}) or descending order (\code{TRUE})
}

\bold{\code{bys_tot}} - Number of observations in a group of records
\itemize{
\item \bold{\code{STATA}} - \bold{\code{bysort group_var : gen x = _N }}
\item \bold{\code{R}} - \bold{\code{bys_tot(by = group_var)}}
}

\bold{\code{bys_val}} - First or last observation of \bold{\code{`val`}} within a group of records

\itemize{
\item \bold{\code{STATA}} - \bold{\code{bysort group_var (sort_vars) : gen val_var = val_var[1]}}
\item \bold{\code{R}} - \bold{\code{bys_val(sort_vars, by = group_var, val = val_var)}}

\item \bold{\code{STATA}} - \bold{\code{bysort group_var (sort_vars) : gen val_var = val_var[_N]}}
\item \bold{\code{R}} - \bold{\code{bys_val(sort_vars, by = group_var, val = val_var, from_last = TRUE)}}
}

\bold{\code{bys_func}} - Apply a function to group of records.
}
\examples{
cat <- c(1,1,5,3,1)
val <- c("K","Z","A","F","K")

bys_rank(cat, by = cat)
bys_rank(val, by = cat)
bys_tot(by = cat)
bys_val(val, by = cat, val=val)
bys_val(val, by = cat, val=val, from_last = T)
}
